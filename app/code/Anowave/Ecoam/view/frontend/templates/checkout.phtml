<script>    <?php	/**	 * Get data	 */	?>	var info = <?php echo $block->getCheckoutPush() ?>, checkout_data = info.push;	<?php	/**	 * Checkout tracker	 */	?>	AEC.Checkout.osc = (function(data)	{		return {			steps:[],			step: function(previous, current, currentCode)			{				data.ecommerce.checkout.actionField.step = 1 + current;				(data => 				{					AEC.CookieConsent.queue(() => 					{						AEC.Cookie.checkout(data).push(dataLayer);											}).process();									})(data);				return this;			},			stepOption: function(step, option)			{				if( typeof option === 'undefined' || option === null )				{				    return this;				}								if (!option.toString().length)				{					return this;				}								var data = 				{					'event': 'checkoutOption',    				'ecommerce':     				{    					'checkout_option':     					{    						'actionField':     						{    							'step': step,    							'option': option    						}    					}    				}				};				if (-1 == AEC.Checkout.osc.steps.indexOf(step))				{					/**					 * Push step					 */					dataLayer.push(					{						'event': 'checkout',	    				'ecommerce': 	    				{	    					'checkout': 	    					{	    						'actionField': 	    						{	    							'step': step	    						}	    					}	    				}					});					/**					 * Queue step					 */					AEC.Checkout.osc.steps.push(step);				}								(data => 				{					AEC.CookieConsent.queue(() => 					{						AEC.Cookie.checkoutOption(data).push(dataLayer);											}).process();									})(data);				if (true)				{        			console.log('Checkout step:' + data.ecommerce.checkout_option.actionField.step + ' Option:' + option);				}        						return this;			}		}	})(checkout_data);	AEC.Checkout.step 		= AEC.Checkout.osc.step;	AEC.Checkout.stepOption = AEC.Checkout.osc.stepOption;	(function(google_tag_params)	{		window.google_tag_params.ecomm_pagetype 	= 'cart';		window.google_tag_params.ecomm_prodid 		= google_tag_params.ecomm_prodid;		window.google_tag_params.ecomm_pvalue		= google_tag_params.ecomm_pvalue;		window.google_tag_params.ecomm_pname		= google_tag_params.ecomm_pname;		window.google_tag_params.ecomm_totalvalue 	= google_tag_params.ecomm_totalvalue;		window.google_tag_params.returnCustomer 	= <?php echo $block->getHelper()->getIsReturnCustomer() ?>;			})(info.google_tag_params);	<?php	/**	 * Set default checkout data	 */	?>		AEC.Checkout.data = checkout_data;	<?php 	/**	 * Default checkout step	 */	?>	AEC.Checkout.data.ecommerce.checkout.actionField.step = AEC.Const.CHECKOUT_STEP_CHECKOUT;	<?php	/**	 * Deep clone	 */	?>		var next = JSON.parse(JSON.stringify(AEC.Checkout.data));	var last = JSON.parse(JSON.stringify(AEC.Checkout.data));	var revw = JSON.parse(JSON.stringify(AEC.Checkout.data));	<?php	/**	 * Change checkout step	 */	?>		next.ecommerce.checkout.actionField.step = AEC.Const.CHECKOUT_STEP_SHIPPING;	<?php	/**	 * Change last step	 */	?>	last.ecommerce.checkout.actionField.step = AEC.Const.CHECKOUT_STEP_PAYMENT;	<?php	/**	 * Change review step	 */	?>		revw.ecommerce.checkout.actionField.step = AEC.Const.CHECKOUT_STEP_REVIEW;		<?php	/**	 * Track first step	 */	?>	(function(data)	{		AEC.CookieConsent.queue(() => 		{			AEC.Cookie.checkout(data).push(dataLayer);					}).process();		        <?php if ($block->getCheckoutHelper()->isOneShippingMethod()):?>            (data =>         	{        		AEC.CookieConsent.queue(() =>         		{        			AEC.Cookie.checkout(data).push(dataLayer);        			        		}).process();        		        	})(next);    			<?php endif ?>		<?php		/**		 * Push payment method automatically if only one payment method is available		 */		?>		<?php if ($block->getCheckoutHelper()->isOnePaymentMethod()):?>    		(data =>         	{        		AEC.CookieConsent.queue(() =>         		{        			AEC.Cookie.checkout(data).push(dataLayer);        			        		}).process();        		        	})(last);					<?php endif ?>		(data =>     	{    		AEC.CookieConsent.queue(() =>     		{    			AEC.Cookie.checkout(data).push(dataLayer);    			    		}).process();    		    	})(revw);			})(AEC.Checkout.data);		<?php	/**	 * Track Facebook Pixel Initiate Checkout	 */	?>	<?php if ($block->getHelper()->facebook()):?>			if ("undefined" !== typeof fbq)		{			var content_ids = [], content_length = AEC.Checkout.data.ecommerce.checkout.products.length;			for (i = 0, l = AEC.Checkout.data.ecommerce.checkout.products.length; i < l; i++)			{				content_ids.push(AEC.Checkout.data.ecommerce.checkout.products[i].id);			}			fbq("track", "InitiateCheckout", 			{				value:			AEC.Checkout.data.total,				content_type:	'product',				content_name: 	'checkout',				content_ids:	content_ids,				num_items:		content_length,				currency: 		'<?php echo $block->getHelper()->getCurrency() ?>'			});		}		<?php endif ?></script>